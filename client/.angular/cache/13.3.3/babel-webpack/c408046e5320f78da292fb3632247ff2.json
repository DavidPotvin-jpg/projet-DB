{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Homer\\\\Documents\\\\Programmation_project\\\\4eme session\\\\INF3710\\\\TP4\\\\projet-DB\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Homer\\\\Documents\\\\Programmation_project\\\\4eme session\\\\INF3710\\\\TP4\\\\projet-DB\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from \"@angular/common/http\"; // tslint:disable-next-line:ordered-imports\n\nimport { of, Subject } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var CommunicationService = /*#__PURE__*/(function () {\n  var CommunicationService = /*#__PURE__*/function () {\n    function CommunicationService(http) {\n      _classCallCheck(this, CommunicationService);\n\n      this.http = http;\n      this.BASE_URL = \"http://localhost:3000/database\";\n      this._listners = new Subject();\n    }\n\n    _createClass(CommunicationService, [{\n      key: \"listen\",\n      value: function listen() {\n        return this._listners.asObservable();\n      }\n    }, {\n      key: \"deleteVariety\",\n      value: function deleteVariety(varietyName) {\n        return this.http.delete(\"\".concat(this.BASE_URL, \"/varieties/\").concat(varietyName), {}).pipe(catchError(this.handleError('deleteVariety')));\n      }\n    }, {\n      key: \"addVariety\",\n      value: function addVariety(variety) {\n        console.info(variety);\n        return this.http.post(\"\".concat(this.BASE_URL, \"/varieties\"), variety).pipe(catchError(this.handleError('addVariety')));\n      }\n    }, {\n      key: \"patchVariety\",\n      value: function patchVariety(varietyName, variety) {\n        return this.http.patch(\"\".concat(this.BASE_URL, \"/varieties/\").concat(varietyName), {}).pipe(catchError(this.handleError('patchVariety')));\n      }\n    }, {\n      key: \"getVarieties\",\n      value: function getVarieties() {\n        return this.http.get(\"\".concat(this.BASE_URL, \"/varieties\")).pipe(catchError(this.handleError('getVarieties')));\n      }\n    }, {\n      key: \"getGardenContent\",\n      value: function getGardenContent(id) {\n        return this.http.get(\"\".concat(this.BASE_URL, \"/gardens/\").concat(id)).pipe(catchError(this.handleError('getGardens')));\n      }\n    }, {\n      key: \"getAllGardens\",\n      value: function getAllGardens() {\n        return this.http.get(\"\".concat(this.BASE_URL, \"/gardens\")).pipe(catchError(this.handleError('getAllGardens')));\n      }\n    }, {\n      key: \"searchPlant\",\n      value: function searchPlant(nameContent) {\n        return this.http.get(\"\".concat(this.BASE_URL, \"/plants/names/\").concat(nameContent)).pipe(catchError(this.handleError('searchPlant')));\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(request, result) {\n        return function (error) {\n          return of(result);\n        };\n      }\n    }]);\n\n    return CommunicationService;\n  }();\n\n  CommunicationService.ɵfac = function CommunicationService_Factory(t) {\n    return new (t || CommunicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommunicationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommunicationService,\n    factory: CommunicationService.ɵfac\n  });\n  return CommunicationService;\n})();","map":null,"metadata":{},"sourceType":"module"}